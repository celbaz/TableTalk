<html>
  <head>
    <title>TableTalk</title>
    <script src="javascripts/chat/peer.js"></script>
    <script src="javascripts/jquery-2.1.3.min.js"></script>
    <script src="https://cdn.firebase.com/js/client/2.1.2/firebase.js"></script>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu:400,700' rel='stylesheet' type='text/css'>

    <link rel="stylesheet" href="stylesheets/index/style.css" media="screen" title="no title" charset="utf-8">
    <link rel="stylesheet" href="stylesheets/chat/style.css" media="screen" title="no title" charset="utf-8">
    <script>

    var myFirebaseRef = new Firebase("https://tabletalk.firebaseio.com/peerids");
    var snap = null;
    myFirebaseRef.limitToFirst(1).once("value", function(snapshot) {
      snap = snapshot.val();
      console.log("HELLO")
      console.log(snap);

    });

    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

    // PeerJS object
    var peer = new Peer({ key: '68mfaxm523hdj9k9', debug: 3, config: {'iceServers': [
      { url: 'stun:stun.l.google.com:19302' } // Pass in optional STUN and TURN server for maximum network compatibility
    ]}});

    var localId;
    peer.on('open', function(id) {
      localId = id;


      if (snap === null) {
        step1();
        myFirebaseRef.set({
          peerid: localId
        });

        // Receiving a call
        peer.on('call', function(call){
          // Answer the call automatically (instead of prompting user) for demo purposes
          call.answer(window.localStream);
          console.log(call);
          step3(call);
        });

        peer.on('error', function(err){
          alert(err.message);
          // Return to step 2 if error occurs
          step2();
        });

        $(window).unload(function () {
          myFirebaseRef.remove();
        })

      } else {

        myFirebaseRef.remove();

        $( function() {
          step1();


          $('#end-call').click(function(){
            window.existingCall.close();
            step2();
          });

          // Retry if getUserMedia fails
          $('#step1-retry').click(function(){
            $('#step1-error').hide();
            step1();
          });

          peer.on('error', function(err){
            alert(err.message);
            // Return to step 2 if error occurs
            step2();
          });

        });
      }

    });



    function step1 () {
      // Get audio/video stream
      navigator.getUserMedia(
        {audio: true, video: true},

        function(stream) {
        // Set your video displays
        $('#my-video').prop('src', URL.createObjectURL(stream));

        window.localStream = stream;

          if(snap !== null) {
            console.log("HELLO")
            var call = peer.call(snap.peerid, window.localStream);
            step3(call);

          }

        step2();
      },

      function(){ alert("FAILED"); });
    }

    function step2 () {
      $('#step1, #step3').hide();
      $('#step2').show();
    }

    function step3 (call) {
      // Hang up on an existing call if present
      if (window.existingCall) {
        window.existingCall.close();
      }

      // Wait for stream on the call, then set peer video display
      call.on('stream', function(stream){
        $('#their-video').prop('src', URL.createObjectURL(stream));
      });

      // UI stuff
      window.existingCall = call;
      $('#their-id').text(call.peer);
      call.on('close', step2);
      $('#step1, #step2').hide();
      $('#step3').show();
    }

  </script>

  </head>
  <body>


    <div class="pure-g group">

      <!-- Video area -->
      <div class="pure-u-2-3" id="video-container">
        <div id="localvideo">
        <video id="my-video" muted="true" autoplay></video>
        </div>
        <div id="remotevideo">
          <video id="their-video" autoplay></video>
        </div>
      </div>

      <!-- Steps -->
      <!-- <div class="pure-u-1-3"> -->
        <!-- Get local audio/video stream -->
        <!-- <div id="step1">
          <p>Please click `allow` on the top of the screen so we can access your webcam and microphone for calls.</p>
          <div id="step1-error">
            <p>Failed to access the webcam and microphone. Make sure to run this demo on an http server and click allow when asked for permission by the browser.</p>
            <a href="#" class="pure-button pure-button-error" id="step1-retry">Try again</a>
          </div> -->
        <!-- </div> -->

        <!-- Make calls to others -->
        <!-- <div id="step2">

          <div class="pure-form">
            <input type="text" placeholder="Call user id..." id="callto-id">
            <a href="#" class="pure-button pure-button-success" id="make-call">Call</a>
          </div>
        </div> -->

        <!-- Call in progress -->
        <!-- <div id="step3">
          <p>Currently in call with <span id="their-id">...</span></p>
          <p><a href="#" class="pure-button pure-button-error" id="end-call">End call</a></p>
        </div> -->
      </div>
  </div>
    <header class="cd-header">
      <div id="cd-logo">TABLETALK</div>
      <a class="cd-menu-trigger" href="#main-nav">Menu<span></span></a>
    </header>
  </body>
</html>
